CodeBrowser: licenselab:/veriT_part1
File Edit Analysis Graph Navigation Search Select Tools Window Help
■ | ■ ■ B ^ □ * |j 2 3 4 | B # ^ Q
IlLilll^ O <» * 8 14:40 | A G
□ £□•.=>- ©&&©[§) 0 I ® ® 0. IF V IB • : ^ «« /@^l3 6^.aOBf B9&|«
Program Trees	|oj & ^ X	
▼ Of veriT_partl (3 -bss 0 .data □ .got.plt □ .got 0 dynamic 0 data.rel.ro 0 fini array 0 nit array 0 eh frame 0 eh_frame_hdr	▲ b ▼
Its Listing: veriT_partl
X
/Decompile: FUN 00190df0 - (veriT partl)
Program Tree x
^ Symbol Tree
►^ mports ► IO Exports ▼ E® Functions ►	f entry' ►	£p FUN_001 ►	IOr hash_ ▼	O^ m	
▼ f main	
P> argc	▼
Filter:
□L Data Type Manager
▼ X
►	£ BuiltlnTypes
►	£OveriT_partl
►	i0 generic_clib_64
^Bl
	00190df4 4d		89	ce	MOV	R14.R9		▲		19	int iVarll;		A
	00190df7	41	55		PUSH	R13		B		20	uint *puVarl2;		
	00190df9	41	89	d5	MOV	R13D.EDX				21	uint uVarl3;		
	00190dfc	41	54		PUSH	R12				22			-\
	00190dfe	55			PUSH	RBP				23	uVar7 = (ulong)param_3;		
	00190dff	48	89	fd	MOV	RBP,RDI				24	uVarl3 = *param_l;		
	00190602	53			PUSH	RBX				25	if (uVarl3 == 1) {		
	00190603	48	89	cb	MOV	RBX.RCX				26	if (**(int **)(param_l + 2) != 1) {		
	00190606	48	83	ec 38	SUB	RSP.0X38				27	/* WARNING: Subroutine does not return */		
	0019060a	8b	07		MOV	EAX.dword ptr [RDI]				28	my_error("print_proof_step: internal errorXn");		
	0019060C	48	89	74	MOV	qword ptr [RSP + local_58].RSI				29	}		
		24	10							30	puVarl2 = *(uint **)(DAT_001f4150 + (ulong)(uint)(*(int **)(param_l + 2))[2] * 8);		
	00190611	44	89	44	MOV	dword ptr [RSP + local_5c].R8D				31	if (puVarl2 != (uint *)0x0) {		
		24	0C							32	uVarl3 = *puVarl2;		
	00190616	83	f8	01	CMP	EAX,0xl|				33	while (uVarl3 != 0) {		
	00190619	0f	84	31	JZ	LAB_00191050				34	if (DAT_001f43f8 == uVarl3) {		
		02	00	00						35	fprintf(param_4."(%s %s "."assume",*(undefined8 *)(puVarl2 + 1));		
	00190elf	44	8b	Id	MOV	R11D,dword ptr [DAT_final_check]				36	goto LAB_001910c7;		
		f2	38	06 00						37	)		
	00190626	45	85	db	TEST	R11D.R11D				38	puVarl2 = (uint *)((long)puVarl2 +		
	00190629	0f	85	f3	JNZ	LAB_00191522				39	(ulong)*(uint *)(DAT_001f4148 + 0x10 + (ulong)uVarl3 * 0x10)	+ 4);	
		06	00	00						40	uVarl3 = *puVarl2;		
	00190e2f	83	f8	55	CMP	EAX.0x55				41	)		
	00190632	0f	86	10	JBE	LAB_00190f48				42	)		
		01	00	00						43	fprintf(param_4,"(%s %sh%d "."assume",param_6.uVar7);		
	00190638	89	dl		MOV	ECX.EDX				44	LAB_001910c7:		
	0019063a	4c	89	ca	MOV	RDX.R9				45	FUN_0018b950(param_4,*(undefined4 *)(*(long *)(param_l + 2) + 8),param_5);		
	0019063d	83	f8	56	CMP	EAX.0x56				46			
	00190640	0f	84	7a	JZ	LAB_001912c0				47	else {		
		04	00	00						48	if (DAT_final_check != 0) {		
	00190646	31	C0		XOR	EAX.EAX				49	fwrite("Error: invalid license key providedXn",1,0x24,_stderr);		
	00190648	48	8d	35	LEA	RSI.[s_(anchor_:step_%st%d_001d08a2]	= "(anchor :step $			50	/* WARNING: Subroutine does not return */		▼
	00190e4f 48		f a 89	03 00 df	MOV	RDI.RBX_			b ▼		r		►	
Console - Scripting
Filter:
00190el6
FUN_00190df0
CMP EAX.0x1